version: "3.7"

##################################################################################
##     MUCH OF THIS FILE WAS COPIED/MODIFIED FROM WWW.SMARTHOMEBEGINNER.COM     ##
##################################################################################


########################
####### NETWORK ########
## USED FOR TRAEIFK 2 ##
########################

####################################################################################
################# RUN FROM CLI BEOFRE STARTING DOCKER-COMPOSE ######################
## docker network create --gateway 192.168.90.1 --subnet 192.168.90.0/24 t2_proxy ##
####################################################################################
#################################### TO REMOVE #####################################
##############        docker-compose -f docker-compose.yml down         ############
##############                docker network rm t2_proxy                ############
####################################################################################

networks:
  t2_proxy:
    external:
      name: t2_proxy
  default:
    driver: bridge

##############
## SERVICES ##
##############

services:

########################################
## ALL SERVICES / APP BELOW THIS LINE ##
########################################

#######################
#######################
### TRAEFIK 2 STUFF ###
#######################
#######################

###############################
## Traefik 2 - Reverse Proxy ##
###############################
# Traefik 2 - Reverse Proxy
  # Touch (create empty files) traefik.log and acme/acme.json. Set acme.json permissions to 600.
  # touch $DOCKERDIR/traefik2/acme/acme.json
  # chmod 600 $DOCKERDIR/traefik2/acme/acme.json
  # touch $DOCKERDIR/traefik2/traefik.log
  
  traefik:
    container_name: traefik
    image: traefik:2.2.1 # the chevrotin tag refers to v2.2.x but introduced a breaking change in 2.2.2
    restart: unless-stopped
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
        # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.>      - --entryPoints.traefik.address=:8080
      - --api=true
#      - --api.insecure=true
#      - --serversTransport.insecureSkipVerify=true
      - --log=true
      - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.$DOMAINNAME`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=t2_proxy
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory.
#      - --providers.file.filename=/path/to/file # Load dynamic configuration from a file.
      - --providers.file.watch=true # Only works on top level files in the rules folder
#      - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-cloudflare.acme.email=$CLOUDFLARE_EMAIL
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
    networks:
      t2_proxy:
        ipv4_address: 192.168.90.254 # You can specify a static IP
#    networks:
#      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - $DOCKERDIR/traefik2/rules:/rules
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/traefik2/acme/acme.json:/acme.json
      - $DOCKERDIR/traefik2/traefik.log:/traefik.log
      - $DOCKERDIR/shared:/shared
    environment:
      - CF_API_EMAIL=$CLOUDFLARE_EMAIL
      - CF_API_KEY=$CLOUDFLARE_API_KEY
    labels:
      - "traefik.enable=true"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAINNAME`)"
      - "traefik.http.routers.traefik-rtr.tls=true"
#      - "traefik.http.routers.traefik-rtr.tls.certresolver=dns-cloudflare" # Comment out this line after first run of traefik to force the use of wildcard certs
      - "traefik.http.routers.traefik-rtr.tls.domains[0].main=$DOMAINNAME"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.$DOMAINNAME"
#      - "traefik.http.routers.traefik-rtr.tls.domains[1].main=$SECONDDOMAINNAME" # Pulls main cert for second domain
#      - "traefik.http.routers.traefik-rtr.tls.domains[1].sans=*.$SECONDDOMAINNAME" # Pulls wildcard cert for second domain
      ## Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      ## Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=chain-oauth@file"
      
################
################
## FRONT ENDS ##
################
################

###############################
## AIRSONIC - MUSIC STREAMER ##
###############################

  airsonic:
    container_name: airsonic
    image: linuxserver/airsonic:latest
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "$AIRSONIC_PORT:4040"
    volumes:
      - $MUSIC:/music
      - $PODCASTS:/podcasts
      - $PLAYLISTS:/playlists
      - $AUDIO_BOOKS:/audio_books
      - $DOCKERDIR/airsonic/config:/config
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=$PUID
      - PGID=$PGID

######################################
## PORTAINER - WEBUI FOR CONTAINERS ##
######################################

  portainer:
    container_name: portainer
    image: portainer/portainer:latest
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/portainer/data:/data
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.portainer-rtr.entrypoints=https"
      - "traefik.http.routers.portainer-rtr.rule=Host(`portainer.$DOMAINNAME`)"
      - "traefik.http.routers.portainer-rtr.tls=true"
      ## Middlewares
#      - "traefik.http.routers.portainer-rtr.middlewares=chain-no-auth@file" # No Authentication
#      - "traefik.http.routers.portainer-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.portainer-rtr.middlewares=chain-oauth@file" # Google OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.portainer-rtr.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"

#################################
## ORGANIZR - UNIFIED FRONTEND ##
#################################

  organizr:
    container_name: organizr
    image: organizrtools/organizr-v2:latest
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/organizr:/config
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.organizr-rtr.entrypoints=https"
      - "traefik.http.routers.organizr-rtr.rule=Host(`$DOMAINNAME`,`www.$DOMAINNAME`)"
      - "traefik.http.routers.organizr-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.organizr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.organizr-rtr.service=organizr-svc"
      - "traefik.http.services.organizr-svc.loadbalancer.server.port=80"

##################################
## NET DATA - SYSTEM MONITORING ##
##################################

  netdata:
    container_name: netdata
    image: netdata/netdata
    hostname: $DOMAINNAME
    networks:
      - t2_proxy
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.netdata-rtr.entrypoints=https"
      - "traefik.http.routers.netdata-rtr.rule=Host(`netdata.$DOMAINNAME`)"
      - "traefik.http.routers.netdata-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.netdata-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.netdata-rtr.service=netdata-svc"
      - "traefik.http.services.netdata-svc.loadbalancer.server.port=19999"


################
################
### SECURITY ###
################
################

###################################################
## GOOGLE OAUTH - SINGLE SIGN ON USING OAUTH 2.0 ##
###################################################

  oauth:
    container_name: oauth
    image: thomseddon/traefik-forward-auth:latest
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      - CLIENT_ID=$GOOGLE_CLIENT_ID
      - CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - SECRET=$OAUTH_SECRET
      - COOKIE_DOMAIN=$DOMAINNAME
      - INSECURE_COOKIE=false
      - AUTH_HOST=oauth.$DOMAINNAME
      - URL_PATH=/_oauth
      - WHITELIST=$MY_EMAIL
      - LOG_LEVEL=info
      - LOG_FORMAT=text
      - LIFETIME=2592000 # 30 days
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.oauth-rtr.entrypoints=https"
      - "traefik.http.routers.oauth-rtr.rule=Host(`oauth.$DOMAINNAME`)"
      - "traefik.http.routers.oauth-rtr.tls=true"
      ## HTTP Services
      - "traefik.http.routers.oauth-rtr.service=oauth-svc"
      - "traefik.http.services.oauth-svc.loadbalancer.server.port=4181"
      ## Middlewares
      - "traefik.http.routers.oauth-rtr.middlewares=chain-oauth@file"


########################
########################
### CLOUDFLARE STUFF ###
########################
########################

###########################################
## CLOUDFLARE DDNS - DYNAMIC DNS UPDATER ##
###########################################

  cf-ddns:
    container_name: cf-ddns
    image: oznu/cloudflare-ddns:latest
    restart: always
    environment:
      - API_KEY=$CLOUDFLARE_API_TOKEN
      - ZONE=$DOMAINNAME
      - PROXIED=true
      - RRTYPE=A
      - DELETE_ON_STOP=false
      - DNS_SERVER=1.1.1.1

#########################################################
## CLOUDFLARE-COMPANION - AUTOMATIC CNAME DNS CREATION ##
#########################################################

  cf-companion:
    container_name: cf-companion
    image: tiredofit/traefik-cloudflare-companion:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TIMEZONE=$TZ
      - TRAEFIK_VERSION=2
      - CF_EMAIL=$CLOUDFLARE_EMAIL # Same as traefik
      # - CF_TOKEN=$CLOUDFLARE_API_TOKEN # Scoped api token not working. Error 10000.
      - CF_TOKEN=$CLOUDFLARE_API_KEY # Same as traefik
      - TARGET_DOMAIN=$DOMAINNAME
      - DOMAIN1=$DOMAINNAME
      - DOMAIN1_ZONE_ID=$CLOUDFLARE_ZONEID # Copy from Cloudflare Overview page
      - DOMAIN1_PROXIED=TRUE
#    labels:
      # Add hosts specified in rules here to force cf-companion to create the CNAMEs
      # Since cf-companion creates CNAMEs based on host rules, this a workaround for non-docker/external apps
#      - "traefik.http.routers.cf-companion-rtr.rule=HostHeader(`pihole.$DOMAINNAME`) || HostHeader(`hassio.$DOMAINNAME`)"

#######################
#######################
##### DOWNLOADERS #####
#######################
#######################
    
######################
## TRANSMISSION-VPN ##
######################

  transmission-vpn:
    container_name: transmission-vpn
    image: haugene/transmission-openvpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    restart: unless-stopped
    ports:
    - "$TRANSMISSION_PORT:9091" #transmission-webui
    - "$RADARR_PORT:7878" #radaar
    - "$SONARR_PORT:8989" #sonaar
    - "$JACKETT_PORT:9117" #jackett
    - "$LIDARR_PORT:8686" #lidarr
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DOCKERDIR/transmission-vpn:/data
      - $DOCKERDIR/shared:/shared
      - $DOWNLOADS_COMPLETE:/data/completed
      - $DOWNLOADS_INCOMPLETE:/data/incomplete
    environment:
      - OPENVPN_PROVIDER=$VPN_PROVIDER
      - OPENVPN_USERNAME=$VPN_USERNAME
      - OPENVPN_PASSWORD=$VPN_PASSWORD
      - OPENVPN_CONFIG=uk-lon_tcp.ovpn
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - LOCAL_NETWORK=$LOCAL_NETWORK
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
      - TRANSMISSION_RPC_HOST_WHITELIST="127.0.0.1,192.168.*.*"
      - TRANSMISSION_RPC_PASSWORD=$TRANSMISSION_RPC_PASSWORD
      - TRANSMISSION_RPC_USERNAME=$TRANSMISSION_RPC_USERNAME
      - TRANSMISSION_UMASK=2
      - TRANSMISSION_RATIO_LIMIT=0.1
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=10
      - TRANSMISSION_PEER_PORT=$TRANSMISSION_PEER_PORT
      - TRANSMISSION_IDLE_SEEDING_LIMIT=1
      - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=true

###############################
## JACKETT - TORRENT INDEXER ##
###############################

  jackett:
    image: "linuxserver/jackett"
    container_name: "jackett"
    volumes:
      - $DOCKERDIR/jackett:/config
      - $DOWNLOADS_COMPLETE:/downloads
      - "/etc/localtime:/etc/localtime:ro"
      - $DOCKERDIR/shared:/shared
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    network_mode: "service:transmission-vpn"

#######################
## SONARR - TV SHOWS ##
#######################

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKERDIR/sonarr/config:/config
      - $TV_SHOWS:/tv
      - $DOWNLOADS_COMPLETE:/data/completed
      - "/etc/localtime:/etc/localtime:ro"
      - $DOCKERDIR/shared:/shared
    restart: unless-stopped
    network_mode: "service:transmission-vpn"

#####################
## RADARR - MOVIES ##
#####################

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKERDIR/radarr/config:/config
      - $DOWNLOADS_COMPLETE:/data/completed
      - $MOVIES:/movies
      - "/etc/localtime:/etc/localtime:ro"
      - $DOCKERDIR/shared:/shared
    restart: unless-stopped
    network_mode: "service:transmission-vpn"

####################
## LIDARR - MUSIC ##
####################

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKERDIR/lidarr/config:/config
      - $MUSIC:/music
      - $DOWNLOADS_COMPLETE:/data/completed
      - "/etc/localtime:/etc/localtime:ro"
      - $DOCKERDIR/shared:/shared
    restart: unless-stopped
    network_mode: "service:transmission-vpn"
    
    
#######################
#######################
### SYSTEM SERVICES ###
#######################
#######################

##################################
## SAMBA - WINDOWS FILE SHARING ##
##################################

  samba:
    image: jenserat/samba-publicshare
    tty: true
    environment:
      - PUID=$PUID
      - PGID=$PGID
    ports:
      - 445:445
      - 137:137
      - 138:138
      - 139:139
    restart: unless-stopped
    volumes:
      - /media:/srv
